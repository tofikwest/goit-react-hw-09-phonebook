{"version":3,"sources":["redux/contacts/contacts.selectors.js","components/contactForm/ContactForm.js","redux/contacts/contacts.operations.js","components/filter/Filter.js","components/contactList/ContactList.js","pages/contacts/Contacts.js","components/contactForm/ContactForm.module.css","components/filter/Filtter.module.css","components/contactList/ContactList.module.css"],"names":["getContactsSelector","state","contacts","items","filterSelector","filter","getLoader","loading","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","initialState","number","ContactForm","useState","setContact","dispatch","useDispatch","useSelector","handleChange","event","target","value","prevState","onSubmit","preventDefault","find","item","alert","a","addContactRequest","axios","post","response","addContactSuccess","data","addContactFailure","addContact","className","styles","inputData","type","placeholder","onChange","pattern","title","required","addBtn","Filter","input","filterContact","ContactList","handleDelete","id","removeContactRequest","delete","removeContactSuccess","removeContactFailure","removeContact","color","height","width","contactsList","map","deleteBtn","onClick","Contacts","useEffect","getContactsRequest","get","getContactsSuccess","getContactsFailure","module","exports"],"mappings":"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","file":"static/js/4.c475625b.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst getContactsSelector = (state) => state.contacts.items;\n\nconst filterSelector = (state) => state.contacts.filter;\n\nconst getLoader = (state) => state.contacts.loading;\n\nconst getFilteredContacts = createSelector(\n  [getContactsSelector, filterSelector],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport { getContactsSelector, filterSelector, getLoader, getFilteredContacts };\n","import React, { useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./ContactForm.module.css\";\n\nimport { addContact } from \"../../redux/contacts/contacts.operations\";\nimport { getContactsSelector } from \"../../redux/contacts/contacts.selectors\";\n\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = () => {\n  const [contact, setContact] = useState(initialState);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContactsSelector);\n\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setContact((prevState) => ({ ...prevState, [name]: value }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const contactExist = contacts.find(\n      (item) => item.name === contact.name\n    );\n\n    if (contactExist) {\n      alert(`Contact <-- ${contact.name} --> already exists`);\n      return;\n    }\n    dispatch(addContact(contact)); \n    setContact(initialState);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}> \n        <label>\n          <input\n            className={styles.inputData}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name:\"\n            value={contact.name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n\n        <label>\n          <input\n            className={styles.inputData}\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number:\"\n            value={contact.number} \n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button type=\"submit\" className={styles.addBtn}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import axios from \"axios\";\nimport {\n  addContactFailure,\n  addContactRequest,\n  addContactSuccess,\n  getContactsFailure,\n  getContactsRequest,\n  getContactsSuccess,\n  removeContactFailure,\n  removeContactRequest,\n  removeContactSuccess,\n} from \"./contacts.actions\";\n\n\nconst getContacts = () => async (dispatch) => {\n  dispatch(getContactsRequest());\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(getContactsSuccess(data));\n  } catch (error) {\n    dispatch(getContactsFailure(error));\n  }\n};\n\nconst addContact =\n  ({ name, number }) =>\n  async (dispatch) => {\n    const contact = { name, number };\n    dispatch(addContactRequest());\n    try {\n      const response = await axios.post(\"/contacts\", contact);\n      dispatch(addContactSuccess(response.data));\n    } catch (error) {\n      dispatch(addContactFailure(error));\n    }\n  };\n\nconst removeContact = (id) => async (dispatch) => {\n  dispatch(removeContactRequest());\n  try {\n    await axios.delete(`/contacts/${id}`);\n    dispatch(removeContactSuccess(id));\n  } catch (error) {\n    dispatch(removeContactFailure(error));\n  }\n};\n\nexport { getContacts, addContact, removeContact };\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./Filtter.module.css\";\n\nimport { filterSelector } from \"../../redux/contacts/contacts.selectors\";\nimport { filterContact } from \"../../redux/contacts/contacts.actions\";\n\nconst Filter = () => {\n  const filter = useSelector(filterSelector);\n\n  const dispatch = useDispatch();\n\n  const handleChange = (event) => {\n    dispatch(filterContact(event.target.value));\n  };\n\n  return (\n    <label>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contact by name\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styles from \"./ContactList.module.css\";\nimport Loader from \"react-loader-spinner\";\n\nimport { removeContact } from \"../../redux/contacts/contacts.operations\";\nimport {\n  getFilteredContacts,\n  getLoader,\n} from \"../../redux/contacts/contacts.selectors\";\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const loading = useSelector(getLoader);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = (id) => {\n    dispatch(removeContact(id));\n  }\n\n  return (\n    <>\n      {loading && (\n        <Loader type=\"ThreeDots\" color=\"#8f73c2\" height={80} width={80} />\n      )}\n      <ul className={styles.contactsList}>\n        {contacts.map((contact) => (\n          <li key={contact.id} className={styles.contact}>\n            {contact.name}: {contact.number}\n            <button\n              className={styles.deleteBtn}\n              type=\"button\"\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport ContactForm from \"../../components/contactForm/ContactForm\";\nimport Filter from \"../../components/filter/Filter\";\nimport ContactList from \"../../components/contactList/ContactList\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getContacts } from \"../../redux/contacts/contacts.operations\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      <h2>Phonebook:</h2>\n      <ContactForm />\n\n      <h2>Contacts:</h2>\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputData\":\"ContactForm_inputData__3kEXK\",\"addBtn\":\"ContactForm_addBtn__1iKqh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filtter_input__1KQKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__1YKAJ\",\"contact\":\"ContactList_contact__2IPsV\",\"deleteBtn\":\"ContactList_deleteBtn__25o37\"};"],"sourceRoot":""}